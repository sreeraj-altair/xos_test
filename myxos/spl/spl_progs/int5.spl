alias physicalSP R8;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo R9;
sysCallNo = [physicalSP - 1];

if (sysCallNo == 8) then		//Fork System Call
	print("=>Fork");
	alias childPCB R10;
	
	childPCB = 0;
	while (childPCB < 1024) do
		if ([READY_LIST + childPCB + 1] == 0) then
			[READY_LIST + childPCB] = (childPCB/32);
			break;
		endif;
		childPCB = childPCB + 32;
	endwhile;
	if (childPCB >= 1024) then
		[physicalSP - 2] = -1;
		print("No free pcb");
		ireturn;
	endif;	
	
	alias counter R11;
	alias numpages R12;
	
	numpages = 0;
	counter = 1;
	while (counter < 8) do
		if ([PTBR + counter] == 01 || [PTBR + counter] == 11) then
			numpages = numpages + 1;
		endif;
		counter = counter + 2;
	endwhile;
	
	alias childpagetable R14;
	childpagetable = 8 * (childPCB/32) + 1024;	//physical address of child page table
	
	alias i R15;
	
	i = 0;
	counter = 0;
	while (i < 9) do
		if ([PTBR + i + 1] == 01 || [PTBR + i + 1] == 11) then
			while (counter < 64) do
				if ([MEM_LIST + counter] == 0) then
					[childpagetable + i] = counter;
					[childpagetable + i + 1] = 11;
					numpages = numpages - 1;
					break;
				endif;
				counter = counter + 1;
			endwhile;
		else
			[childpagetable + i] = [PTBR + i];
			[childpagetable + i + 1] = 00;
		endif;
		i = i + 2;
	endwhile;
	if (numpages != 0) then
		[physicalSP - 2] = -1;
		print ("No free mem");
		ireturn;
	endif;
	
	alias temp R12;
	temp = READY_LIST + childPCB;
	
	[temp + 1] = 1;
	[temp + 5] = childpagetable;
	[temp + 4] = IP;
	[temp + 3] = SP - 1;
	[temp + 2] = BP;
	[temp + 7] = R0;
	[temp + 8] = R1;
	[temp + 9] = R2;
	[temp + 10] = R3;
	[temp + 11] = R4;
	[temp + 12] = R5;
	[temp + 13] = R6;
	[temp + 14] = R7;
	
	alias parentPCB R12;
	parentPCB = READY_LIST + 32 * ((PTBR - 1024) / 8);
	
	alias temp2 R14;
	temp2 = READY_LIST + childPCB + counter;
	
	alias temp3 R13;
	
	alias temp4 R9;
	temp4 = parentPCB + counter;
	
	counter = 15;
	while (counter < 31) do
		[temp2] = [temp4];
		[temp2 + 1] = [temp4];
		temp3 = FILE_TABLE + [temp4] + 1;
		[temp3] = [temp3] + 1;
		counter = counter + 2;
	endwhile;
	
	[physicalSP - 2] = (childPCB/32);
	ireturn;
	
	
	
	
endif;
