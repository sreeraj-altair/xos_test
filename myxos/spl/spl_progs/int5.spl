alias physicalSP S0;
physicalSP = ([PTBR + 6] * 512) + (SP % 512);

		//Fork System Call

	alias childPCB S2;
	alias childPID S11;

	childPCB = READY_LIST;
	while (childPCB < 2560) do
		if ([childPCB + 1] == 0) then
			childPID = (childPCB - READY_LIST)/32;
			[childPCB] = childPID;
			break;
		endif;
		childPCB = childPCB + 32;
	endwhile;
	//if (childPCB >= 2560) then
		//[physicalSP - 2] = -1;
		//ireturn;
	//endif;	

	alias counter S3;
	alias childstack S4;
	
	counter = 0;
	while (counter < 64) do
		if ([MEM_LIST + counter] == 0) then
			childstack = counter;
			[MEM_LIST + counter] = 1;
			break;
		endif;
		counter = counter + 1;
	endwhile;
	//if (counter >= 64) then
		//print("Mem Full");
		//[physicalSP - 2] = -1;
		//ireturn;
	//endif;

	alias parentstack S5;
	parentstack = [PTBR + 6];

	counter = 0;
	while (counter < 512) do
		[(childstack * 512) + counter] = [(parentstack * 512) + counter];
		counter = counter + 1;
	endwhile;

	alias childpagetable S6;
	childpagetable = 8 * childPID + 1024;	//physical address of child page table

	[childpagetable + 6] = childstack;
	[childpagetable + 7] = "01";

	alias i S7;
	alias page S8;
	alias temp S9;
	alias temp4 S10;
	alias temp1 S12;
	counter = 0;
	while (counter < 6) do
		i = 448;
		while (i < 512) do
			if ([DISK_LIST + i] == 0) then
				break;
			endif;
		endwhile;
		temp = childpagetable + counter;
		temp1 = temp + 1;
		temp4 = PTBR + counter + 1;
	
		if (([temp4] % 10) == 1) then
			[temp] = i;
			[temp1] = "00";
			[DISK_LIST + i] = 1;
		else
			page = [temp4];
			if (page < 448) then
				[temp] = page;
				[temp1] = [temp4];
			endif;
			if (page >= 448) then
				load (1,page);
				store (1, i);
				[DISK_LIST + i] = 1;
				[temp] = i;
				[temp1] = [temp4];
			endif;
		endif;
		counter = counter + 2;
	endwhile;

	store (6,11);

	temp = childPCB;

	[temp + 1] = 1;
	[temp + 5] = childpagetable;
	[temp + 4] = [physicalSP];
	[temp + 3] = SP - 1;
	[temp + 2] = BP;
	[temp + 6] = PTLR;
	[temp + 7] = R0;
	[temp + 8] = R1;
	[temp + 9] = R2;
	[temp + 10] = R3;
	[temp + 11] = R4;
	[temp + 12] = R5;
	[temp + 13] = R6;
	[temp + 14] = R7;

	alias parentPCB S13;
	parentPCB = READY_LIST + 32 * ((PTBR - 1024) / 8);

	alias temp2 S14;
	alias temp3 S15;

	counter = 15;
	while (counter < 31) do
		temp = childPCB + counter;
		temp3 = parentPCB + counter;
	
		[temp] = [temp3];
		[temp + 1] = [temp3];
		temp2 = FILE_TABLE + [temp3] + 1;
		[temp2] = [temp2] + 1;
		counter = counter + 2;
	endwhile;

	[physicalSP - 2] = childPID;

	physicalSP = ([childpagetable + 6] * 512) + (SP % 512);

	[physicalSP - 2] = -2;

	breakpoint;
	ireturn;
	

